[{"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\App.js":"1","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\reportWebVitals.js":"2","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\components\\SidebarData.js":"3","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\components\\Navbar.js":"4","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Assicurazioni.js":"5","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Home.js":"6","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Soggetti.js":"7","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Studi.js":"8","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Liquidatori.js":"9","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Incarichi.js":"10","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Avvocati.js":"11","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\index.js":"12","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Appuntamenti.js":"13","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Incidenti.js":"14","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Dottori.js":"15"},{"size":1363,"mtime":1610703968677,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1649,"mtime":1610703476293,"results":"19","hashOfConfig":"17"},{"size":1651,"mtime":1610636935390,"results":"20","hashOfConfig":"17"},{"size":14612,"mtime":1614423466674,"results":"21","hashOfConfig":"17"},{"size":382,"mtime":1610709187124,"results":"22","hashOfConfig":"17"},{"size":16638,"mtime":1614433027892,"results":"23","hashOfConfig":"17"},{"size":8195,"mtime":1613821044738,"results":"24","hashOfConfig":"17"},{"size":7326,"mtime":1614430918321,"results":"25","hashOfConfig":"17"},{"size":11352,"mtime":1614531852822,"results":"26","hashOfConfig":"17"},{"size":15333,"mtime":1614424729326,"results":"27","hashOfConfig":"17"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"17"},{"size":203,"mtime":1610702932483,"results":"29","hashOfConfig":"17"},{"size":191,"mtime":1610703058909,"results":"30","hashOfConfig":"17"},{"size":7168,"mtime":1614506215260,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"506c7x",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\App.js",["70","71"],"import React, {useState, useEffect} from \"react\";\nimport './App.css';\n\nimport Navbar from \"./components/Navbar\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Home from './pages/Home';\nimport Appuntamenti from './pages/Appuntamenti';\nimport Assicurazioni from './pages/Assicurazioni';\nimport Avvocati from './pages/Avvocati';\nimport Dottori from './pages/Dottori';\nimport Incarichi from './pages/Incarichi';\nimport Incidenti from './pages/Incidenti';\nimport Liquidatori from './pages/Liquidatori';\nimport Soggetti from './pages/Soggetti';\nimport Studi from './pages/Studi';\n\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/appuntamenti' component={Appuntamenti} />\n          <Route path='/incarichi' component={Incarichi} />\n          <Route path='/soggetti' component={Soggetti} />\n          <Route path='/dottori' component={Dottori} />\n          <Route path='/avvocati' component={Avvocati} />\n          <Route path='/incidenti' component={Incidenti} />\n          <Route path='/assicurazioni' component={Assicurazioni} />\n          <Route path='/liquidatori' component={Liquidatori} />\n          <Route path='/studi' component={Studi} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n ","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\reportWebVitals.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\components\\SidebarData.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\components\\Navbar.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Assicurazioni.js",["72","73","74"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nexport function Assicurazioni(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [telefono1, setTelefono1] = useState(\"\");\r\n    const [telefono2, setTelefono2] = useState(\"\");\r\n    const [indirizzo, setIndirizzo] = useState(\"\");\r\n    const [cap, setCap] = useState(\"\");\r\n    const [partitaiva, setPartitaiva] = useState(\"\");\r\n    const [codicefiscale, setCodicefiscale] = useState(\"\");\r\n    const [note, setNote] = useState(\"\");\r\n\r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, nome: name, email: email, telefono1: telefono1, telefono2: telefono2, indirizzo: indirizzo, cap: cap, partitaiva: partitaiva, codicefiscale: codicefiscale, note: note })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/assicurazione', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchAssicurazioni();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (assicurazione) => {\r\n        var r = window.confirm(`Confermi di eliminare l' assicurazione: ${assicurazione.nome} , ${assicurazione.indirizzo} , ${assicurazione.cap}`);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(assicurazione)\r\n            };\r\n            fetch('http://localhost:8080/delete/assicurazione/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchAssicurazioni();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (assicurazione) => {\r\n        console.log(\"EDIT\", assicurazione);\r\n        setId(assicurazione.id);\r\n        setName(assicurazione.nome);\r\n        setEmail(assicurazione.email);\r\n        setTelefono1(assicurazione.telefono1);\r\n        setTelefono2(assicurazione.telefono2);\r\n        setIndirizzo(assicurazione.indirizzo);\r\n        setCap(assicurazione.cap);\r\n        setPartitaiva(assicurazione.partitaiva);\r\n        setCodicefiscale(assicurazione.codicefiscale);\r\n        setNote(assicurazione.note);\r\n        setTipoins('Modifica Assicurazione');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setTelefono1(\"\");\r\n        setTelefono2(\"\");\r\n        setIndirizzo(\"\");\r\n        setCap(\"\");\r\n        setPartitaiva(\"\");\r\n        setCodicefiscale(\"\");\r\n        setNote(\"\");\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchAssicurazioni = () => {\r\n        axios.get(\"http://localhost:8080/fetch/assicurazioni\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAssicurazioni();\r\n    }, []);\r\n\r\n    let assicurazioniArray = data;\r\n\r\n    const renderAssicurazioni = (assicurazione) => {\r\n        return (\r\n            <tr key={assicurazione.id}>\r\n            <td>{assicurazione.nome}</td>\r\n            <td>{assicurazione.email}</td>\r\n            <td>{assicurazione.telefono1}</td>\r\n            <td>{assicurazione.telefono2}</td>\r\n            <td>{assicurazione.indirizzo}</td>\r\n            <td>{assicurazione.cap}</td>\r\n            <td>{assicurazione.partitaiva}</td>\r\n            <td>{assicurazione.codicefiscale}</td>\r\n            <td>{assicurazione.note}</td>\r\n            <td><Button onClick={() => handleEdit(assicurazione)}>Edit</Button></td>\r\n            <td><Button onClick={() => handleDelete(assicurazione)}>Delete</Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Assicurazioni</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Assicurazione eliminata con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Assicurazione fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nome</th>\r\n                            <th>Email</th>\r\n                            <th>Telefono 1</th>\r\n                            <th>Telefono 2</th>\r\n                            <th>Indirizzo</th>\r\n                            <th>CAP</th>\r\n                            <th>Partita Iva</th>\r\n                            <th>Codice Fiscale</th>\r\n                            <th>Note</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {assicurazioniArray.map(renderAssicurazioni)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Nome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nome Assicurazione\"\r\n                                    defaultValue=\"\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il nome Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Email </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email Assicurazione\"\r\n                                    defaultValue=\"\"\r\n                                    value={email}\r\n                                    onChange={e => setEmail(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Email Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Telefono principale </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Telefono principale\"\r\n                                    defaultValue=\"\"\r\n                                    value={telefono1}\r\n                                    onChange={e => setTelefono1(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Telefono principale\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Telefono secondario </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Telefono secondario\"\r\n                                    defaultValue=\"\"\r\n                                    value={telefono2}\r\n                                    onChange={e => setTelefono2(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Telefono secondario\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextAddress\">\r\n                                <Form.Label> Indirizzo </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Indirizzo Assicurazione\"\r\n                                    defaultValue=\"\"\r\n                                    value={indirizzo}\r\n                                    onChange={e => setIndirizzo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci l'indirizzo es. \"Via Dante Alighieri, 3, Firenze\"\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextCap\">\r\n                                <Form.Label> CAP </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"number\"\r\n                                    placeholder=\"CAP Assicurazione\"\r\n                                    defaultValue=\"\"\r\n                                    value={cap}\r\n                                    onChange={e => setCap(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci CAP es. \"50122\"\r\n                                </Form.Text>\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Partita iva </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Partita iva\"\r\n                                    defaultValue=\"\"\r\n                                    value={partitaiva}\r\n                                    onChange={e => setPartitaiva(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci Partita iva Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Codice Fiscale </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Codice Fiscale\"\r\n                                    defaultValue=\"\"\r\n                                    value={codicefiscale}\r\n                                    onChange={e => setCodicefiscale(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Codice Fiscale Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Note </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Note\"\r\n                                    defaultValue=\"\"\r\n                                    value={note}\r\n                                    onChange={e => setNote(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci eventuali Note per l'Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                            <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                            <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Assicurazioni;\r\n","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Home.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Soggetti.js",["75","76"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nexport function Soggetti(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [cognome, setCognome] = useState(\"\");\r\n    const [luogonascita, setLuogonascita] = useState(\"\");\r\n    const [datanascita, setDatanascita] = useState(\"\");\r\n    const [indirizzo, setIndirizzo] = useState(\"\");\r\n    const [cap, setCap] = useState(\"\");\r\n    const [telefono, setTelefono] = useState(\"\");\r\n    const [sesso, setSesso] = useState(\"\");\r\n    const [note, setNote] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [codicefiscale, setCodicefiscale] = useState(\"\");\r\n    \r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, nome: name, cognome: cognome, luogonascita: luogonascita, datanascita: datanascita, indirizzo: indirizzo, cap: cap, telefono: telefono, sesso: sesso, note: note, email: email, codicefiscale: codicefiscale })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/soggetto', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchSoggetti();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (soggetto) => {\r\n        var r = window.confirm(`Confermi di eliminare lo soggetto: ${soggetto.nome} , ${soggetto.cognome}`);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(soggetto)\r\n            };\r\n            fetch('http://localhost:8080/delete/soggetto/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchSoggetti();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (soggetto) => {\r\n        console.log(\"EDIT\", soggetto);\r\n        setId(soggetto.id);\r\n        setName(soggetto.nome);\r\n        setCognome(soggetto.cognome);\r\n        setLuogonascita(soggetto.luogonascita);\r\n        setDatanascita(soggetto.datanascita);\r\n        setIndirizzo(soggetto.indirizzo);\r\n        setCap(soggetto.cap);\r\n        setTelefono(soggetto.telefono);\r\n        setSesso(soggetto.sesso);\r\n        setNote(soggetto.note);\r\n        setEmail(soggetto.email);\r\n        setCodicefiscale(soggetto.codicefiscale);\r\n        setTipoins('Modifica Soggetto');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n        setName(\"\");\r\n        setCognome(\"\");\r\n        setLuogonascita(\"\");\r\n        setDatanascita(\"\");\r\n        setIndirizzo(\"\");\r\n        setCap(\"\");\r\n        setTelefono(\"\");\r\n        setSesso(\"\");\r\n        setNote(\"\");\r\n        setEmail(\"\");\r\n        setCodicefiscale(\"\");\r\n\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchSoggetti = () => {\r\n        axios.get(\"http://localhost:8080/fetch/soggetti\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchSoggetti();\r\n    }, []);\r\n\r\n    let soggettiArray = data;\r\n\r\n    const renderSoggetti = (soggetto) => {\r\n        return (\r\n            <tr key={soggetto.id}>\r\n            <td>{soggetto.nome}</td>\r\n            <td>{soggetto.cognome}</td>\r\n            <td>{soggetto.luogonascita}</td>\r\n            <td>\r\n                <Moment format=\"DD/MM/YY\">\r\n                    {soggetto.datanascita}\r\n                </Moment>\r\n            </td>\r\n            <td>{soggetto.indirizzo}</td>\r\n            <td>{soggetto.cap}</td>\r\n            <td>{soggetto.telefono}</td>\r\n            <td>{soggetto.sesso}</td>\r\n            <td>{soggetto.note}</td>\r\n            <td>{soggetto.email}</td>\r\n            <td>{soggetto.codicefiscale}</td>\r\n            <td><Button onClick={() => handleEdit(soggetto)}>Edit</Button></td>\r\n            <td><Button onClick={() => handleDelete(soggetto)}>Delete</Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Soggetti</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Soggetto eliminato con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Soggetto fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th>Luogo di Nascita</th>\r\n                            <th>Data di Nascita</th>\r\n                            <th>Indirizzo</th>\r\n                            <th>CAP</th>\r\n                            <th>Telfono</th>\r\n                            <th>Sesso</th>\r\n                            <th>Note</th>\r\n                            <th>Email</th>\r\n                            <th>Codice Fiscale</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {soggettiArray.map(renderSoggetti)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Nome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nome Soggetto\"\r\n                                    defaultValue=\"\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il nome Soggetto\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Cognome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Cognome Soggetto\"\r\n                                    defaultValue=\"\"\r\n                                    value={cognome}\r\n                                    onChange={e => setCognome(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il cognome Soggetto\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Luogo di nascita </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Luogo di nascita\"\r\n                                    defaultValue=\"\"\r\n                                    value={luogonascita}\r\n                                    onChange={e => setLuogonascita(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Luogo di nascita Soggetto\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Data di nascita </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"date\"\r\n                                    placeholder=\"Data di nascita\"\r\n                                    defaultValue=\"\"\r\n                                    value={datanascita}\r\n                                    onChange={e => setDatanascita(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Data di nascita Soggetto\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextAddress\">\r\n                                <Form.Label> Indirizzo </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Indirizzo Soggetto\"\r\n                                    defaultValue=\"\"\r\n                                    value={indirizzo}\r\n                                    onChange={e => setIndirizzo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci l'indirizzo es. \"Via Dante Alighieri, 3, Firenze\"\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextCap\">\r\n                                <Form.Label> CAP </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"number\"\r\n                                    placeholder=\"CAP Soggetto\"\r\n                                    defaultValue=\"\"\r\n                                    value={cap}\r\n                                    onChange={e => setCap(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci CAP es. \"50122\"\r\n                                </Form.Text>\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Telefono </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Telefono\"\r\n                                    defaultValue=\"\"\r\n                                    value={telefono}\r\n                                    onChange={e => setTelefono(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Telefono Soggetto\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Sesso </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"M/F\"\r\n                                    defaultValue=\"\"\r\n                                    value={sesso}\r\n                                    onChange={e => setSesso(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il sesso Soggetto es \"F\"\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Email </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"email@dominio.es\"\r\n                                    defaultValue=\"\"\r\n                                    value={email}\r\n                                    onChange={e => setEmail(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci Email Soggetto\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Codice Fiscale </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Codice Fiscale\"\r\n                                    defaultValue=\"\"\r\n                                    value={codicefiscale}\r\n                                    onChange={e => setCodicefiscale(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Codice Fiscale Soggetto\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Note </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Note\"\r\n                                    defaultValue=\"\"\r\n                                    value={note}\r\n                                    onChange={e => setNote(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci eventuali Note per il Soggetto\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                            <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                            <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Soggetti;\r\n","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Studi.js",["77","78"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport function Studi(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [indirizzo, setIndirizzo] = useState(\"\");\r\n    const [cap, setCap] = useState(\"\");\r\n    \r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, nome: name, indirizzo: indirizzo, cap: cap })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/studio', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchStudi();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (studio) => {\r\n        var r = window.confirm(`Confermi di eliminare lo studio: ${studio.nome} , ${studio.indirizzo} , ${studio.cap}`);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ id: studio.id, nome: studio.name, indirizzo: studio.indirizzo, cap: studio.cap })\r\n            };\r\n            fetch('http://localhost:8080/delete/studio/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchStudi();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (studio) => {\r\n        console.log(\"EDIT\", studio);\r\n        setId(studio.id);\r\n        setName(studio.nome);\r\n        setIndirizzo(studio.indirizzo);\r\n        setCap(studio.cap);\r\n        setTipoins('Modifica Studio');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n        setName(\"\");\r\n        setIndirizzo(\"\");\r\n        setCap(\"\");\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchStudi = () => {\r\n        axios.get(\"http://localhost:8080/fetch/studi\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchStudi();\r\n    }, []);\r\n\r\n    let studiArray = data;\r\n\r\n    const renderStudi = (studio) => {\r\n        return (\r\n            <tr key={studio.id}>\r\n            <td>{studio.nome}</td>\r\n            <td>{studio.indirizzo}</td>\r\n            <td>{studio.cap}</td>\r\n            <td><Button onClick={() => handleEdit(studio)}>Edit</Button></td>\r\n            <td><Button onClick={() => handleDelete(studio)}>Delete</Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Studi</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Studio eliminato con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Studio fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nome</th>\r\n                            <th>Indirizzo</th>\r\n                            <th>CAP</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {studiArray.map(renderStudi)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Nome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nome Studio\"\r\n                                    defaultValue=\"\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il nome Studio\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextAddress\">\r\n                                <Form.Label> Indirizzo </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Indirizzo Studio\"\r\n                                    defaultValue=\"\"\r\n                                    value={indirizzo}\r\n                                    onChange={e => setIndirizzo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci l'indirizzo es. \"Via Dante Alighieri, 3, Firenze\"\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextCap\">\r\n                                <Form.Label> CAP </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"number\"\r\n                                    placeholder=\"CAP Studio\"\r\n                                    defaultValue=\"\"\r\n                                    value={cap}\r\n                                    onChange={e => setCap(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci CAP es. \"50122\"\r\n                                </Form.Text>\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                            <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                            <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Studi;\r\n","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Liquidatori.js",["79","80"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport function Liquidatori(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [cognome, setCognome] = useState(\"\");\r\n    \r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, nome: name, cognome: cognome })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/liquidatore', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchLiquidatori();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (liquidatore) => {\r\n        var r = window.confirm(`Confermi di eliminare il liquidatore: ${liquidatore.nome} , ${liquidatore.cognome} `);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ id: liquidatore.id, nome: liquidatore.name, indirizzo: liquidatore.cognome })\r\n            };\r\n            fetch('http://localhost:8080/delete/liquidatore/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchLiquidatori();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (liquidatore) => {\r\n        console.log(\"EDIT\", liquidatore);\r\n        setId(liquidatore.id);\r\n        setName(liquidatore.nome);\r\n        setCognome(liquidatore.cognome);\r\n        setTipoins('Modifica Liquidatore');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n        setName(\"\");\r\n        setCognome(\"\");\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchLiquidatori = () => {\r\n        axios.get(\"http://localhost:8080/fetch/liquidatori\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchLiquidatori();\r\n    }, []);\r\n\r\n    let liquidatoriArray = data;\r\n\r\n    const renderLiquidatori = (liquidatore) => {\r\n        return (\r\n            <tr key={liquidatore.id}>\r\n            <td>{liquidatore.nome}</td>\r\n            <td>{liquidatore.cognome}</td>\r\n            <td><Button onClick={() => handleEdit(liquidatore)}>Edit</Button></td>\r\n            <td><Button onClick={() => handleDelete(liquidatore)}>Delete</Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Liquidatori</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Liquidatore eliminato con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Liquidatore fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {liquidatoriArray.map(renderLiquidatori)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Nome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nome Liquidatore\"\r\n                                    defaultValue=\"\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il nome Liquidatore\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextAddress\">\r\n                                <Form.Label> Cognome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Indirizzo Liquidatore\"\r\n                                    defaultValue=\"\"\r\n                                    value={cognome}\r\n                                    onChange={e => setCognome(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il cognome Liquidatore\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                                <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                                <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Liquidatori;\r\n","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Incarichi.js",["81","82","83","84","85","86"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport function Incarichi(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [tipo, setTipo] = useState(\"\");\r\n    const [idAssicurazione, setIdAssicurazione] = useState(\"\");\r\n    const [idLiquidatore, setIdLiquidatore] = useState(\"\");\r\n    const [ambito, setAmbito] = useState(\"\");\r\n    const [idSoggetto, setIdSoggetto] = useState(\"\");\r\n    const [idAvvocato, setIdAvvocato] = useState(\"\");\r\n    const [nSinistro, setNSinistro] = useState(\"\");\r\n    const [idDottore, setIdDottore] = useState(\"\");\r\n    const [dataSinistro, setDataSinistro] = useState(\"\");\r\n    const [dataIncarico, setDataIncarico] = useState(\"\");\r\n    const [note, setNote] = useState(\"\");\r\n\r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, tipo: tipo, id_assicurazione: idAssicurazione,\r\n            id_liquidatore: idLiquidatore, ambito: ambito, id_soggetto: idSoggetto,\r\n            id_avvocato: idAvvocato, n_sinistro: nSinistro, id_dottore: idDottore,\r\n            data_sinistro: dataSinistro, data_incarico: dataIncarico, note: note })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/incarico', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchIncarichi();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (incarico) => {\r\n        var r = window.confirm(`Confermi di eliminare il incarico: ${incarico.nome} , ${incarico.cognome} `);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ id: incarico.id, tipo: incarico.tipo, id_assicurazione: incarico.id_assicurazione,\r\n                    id_liquidatore: incarico.id_liquidatore, ambito: incarico.ambito, id_soggetto: incarico.id_soggetto,\r\n                    id_avvocato: incarico.id_avvocato, n_sinistro: incarico.n_sinistro, id_dottore: incarico.id_dottore,\r\n                    data_sinistro: incarico.data_sinistro, data_incarico: incarico.data_incarico, note: incarico.note })\r\n            };\r\n            fetch('http://localhost:8080/delete/incarico/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchIncarichi();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (incarico) => {\r\n        console.log(\"EDIT\", incarico);\r\n        setId(incarico.id);\r\n        setTipo(incarico.tipo);\r\n        setIdAssicurazione(incarico.id_assicurazione);\r\n        setIdLiquidatore(incarico.id_liquidatore);\r\n        setAmbito(incarico.ambito);\r\n        setIdSoggetto(incarico.id_soggetto);\r\n        setIdAvvocato(incarico.id_avvocato);\r\n        setNSinistro(incarico.n_sinistro);\r\n        setIdDottore(incarico.id_dottore);\r\n        setDataSinistro(incarico.data_sinistro);\r\n        setDataIncarico(incarico.data_incarico);\r\n        setNote(incarico.note);\r\n\r\n        setTipoins('Modifica Incarico');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n\r\n        setTipo(\"\");\r\n        setIdAssicurazione(\"\");\r\n        setIdLiquidatore(\"\");\r\n        setAmbito(\"\");\r\n        setIdSoggetto(\"\");\r\n        setIdAvvocato(\"\");\r\n        setNSinistro(\"\");\r\n        setIdDottore(\"\");\r\n        setDataSinistro(\"\");\r\n        setDataIncarico(\"\");\r\n        setNote(\"\");\r\n\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n    const [dataAss, setDataAss] = useState([]);\r\n    const [dataLiq, setDataLiq] = useState([]);\r\n    const [dataSog, setDataSog] = useState([]);\r\n    const [dataAvv, setDataAvv] = useState([]);\r\n    const [dataDot, setDataDot] = useState([]);\r\n\r\n    const fetchIncarichi = () => {\r\n        axios.get(\"http://localhost:8080/fetch/incarichi\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    const fetchAssicurazioni = () => {\r\n        axios.get(\"http://localhost:8080/fetch/assicurazioni\").then( res => {\r\n            console.log(res);\r\n            setDataAss(res.data);\r\n        });\r\n    };\r\n\r\n    const fetchLiquidatori = () => {\r\n        axios.get(\"http://localhost:8080/fetch/liquidatori\").then( res => {\r\n            console.log(res);\r\n            setDataLiq(res.data);\r\n        });\r\n    };\r\n\r\n    const fetchSoggetti = () => {\r\n        axios.get(\"http://localhost:8080/fetch/soggetti\").then( res => {\r\n            console.log(res);\r\n            setDataSog(res.data);\r\n        });\r\n    };\r\n\r\n    const fetchAvvocati = () => {\r\n        axios.get(\"http://localhost:8080/fetch/avvocati\").then( res => {\r\n            console.log(res);\r\n            setDataAvv(res.data);\r\n        });\r\n    };\r\n\r\n    const fetchDottori = () => {\r\n        axios.get(\"http://localhost:8080/fetch/dottori\").then( res => {\r\n            console.log(res);\r\n            setDataDot(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchIncarichi();\r\n        fetchAssicurazioni();\r\n        fetchLiquidatori();\r\n        fetchSoggetti();\r\n        fetchAvvocati();\r\n        fetchDottori();\r\n    }, []);\r\n\r\n    let incarichiArray = data;\r\n    let assicurazioniArray = dataAss;\r\n    let liquidatoriArray = dataLiq;\r\n    let soggettiArray = dataSog;\r\n    let avvocatiArray = dataAvv;\r\n    let dottoriArray = dataDot;\r\n\r\n    const renderAssicurazioni = (assicurazione) => {\r\n        return (\r\n            <option value={assicurazione.id}>{assicurazione.nome}</option>\r\n        )\r\n    }\r\n\r\n    const renderIncarichi = (incarico) => {\r\n        return (\r\n            <tr key={incarico.id}>\r\n            <td>{incarico.tipo}</td>\r\n            <td>{incarico.id_assicurazione}</td>\r\n            <td>{incarico.id_liquidatore}</td>\r\n            <td>{incarico.ambito}</td>\r\n            <td>{incarico.id_soggetto}</td>\r\n            <td>{incarico.id_avvocato}</td>\r\n            <td>{incarico.n_sinistro}</td>\r\n            <td>{incarico.id_dottore}</td>\r\n            <td>{incarico.data_sinistro}</td>\r\n            <td>{incarico.data_incarico}</td>\r\n            <td>{incarico.note}</td>\r\n            <td><Button onClick={() => handleEdit(incarico)}>Edit</Button></td>\r\n            <td><Button onClick={() => handleDelete(incarico)}>Delete</Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Incarichi</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Incarico eliminato con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Incarico fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Tipo</th>\r\n                            <th>Assicurazione</th>\r\n                            <th>Liquidatore</th>\r\n                            <th>Ambito</th>\r\n                            <th>Soggetto</th>\r\n                            <th>Avvocato</th>\r\n                            <th>N. Sinistro</th>\r\n                            <th>Dottore</th>\r\n                            <th>Data Sinistro</th>\r\n                            <th>Data Incarico</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {incarichiArray.map(renderIncarichi)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Tipo </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Tipo Incarico\"\r\n                                    defaultValue=\"\"\r\n                                    value={tipo}\r\n                                    onChange={e => setTipo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il tipo Incarico\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"exampleForm.SelectCustomSizeSm\">\r\n                                <Form.Label> Assicurazione </Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    value={idAssicurazione}\r\n                                    onChange={e => setIdAssicurazione(e.target.value)}>\r\n                                    {assicurazioniArray.map(renderAssicurazioni)}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                                <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                                <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Incarichi;\r\n","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Avvocati.js",["87","88","89"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nexport function Avvocati(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [cognome, setCognome] = useState(\"\");\r\n    const [titolo, setTitolo] = useState(\"\");\r\n    const [indirizzo, setIndirizzo] = useState(\"\");\r\n    const [cap, setCap] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pec, setPec] = useState(\"\");\r\n    const [telefono1, setTelefono1] = useState(\"\");\r\n    const [telefono2, setTelefono2] = useState(\"\");\r\n    const [fax, setFax] = useState(\"\");\r\n    const [note, setNote] = useState(\"\");\r\n\r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, nome: name, cognome: cognome, titolo: titolo, indirizzo: indirizzo, cap: cap, email: email, pec: pec, telefono1: telefono1, telefono2: telefono2, fax: fax, note: note })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/avvocato', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchAvvocati();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (avvocato) => {\r\n        var r = window.confirm(`Confermi di eliminare l' avvocato: ${avvocato.nome} , ${avvocato.cognome}`);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(avvocato)\r\n            };\r\n            fetch('http://localhost:8080/delete/avvocato/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchAvvocati();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (avvocato) => {\r\n        console.log(\"EDIT\", avvocato);\r\n        setId(avvocato.id);\r\n        setName(avvocato.nome);\r\n        setCognome(avvocato.cognome);\r\n        setTitolo(avvocato.titolo);\r\n        setIndirizzo(avvocato.indirizzo);\r\n        setCap(avvocato.cap);\r\n        setEmail(avvocato.email);\r\n        setPec(avvocato.pec);\r\n        setTelefono1(avvocato.telefono1);\r\n        setTelefono2(avvocato.telefono2);\r\n        setFax(avvocato.fax);\r\n        setNote(avvocato.note);\r\n        setTipoins('Modifica Avvocato');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n        setName(\"\");\r\n        setCognome(\"\");\r\n        setTitolo(\"\");\r\n        setIndirizzo(\"\");\r\n        setCap(\"\");\r\n        setEmail(\"\");\r\n        setPec(\"\");\r\n        setTelefono1(\"\");\r\n        setTelefono2(\"\");\r\n        setFax(\"\");\r\n        setNote(\"\");\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchAvvocati = () => {\r\n        axios.get(\"http://localhost:8080/fetch/avvocati\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAvvocati();\r\n    }, []);\r\n\r\n    let avvocatiArray = data;\r\n\r\n    const renderAvvocati = (avvocato) => {\r\n        return (\r\n            <tr key={avvocato.id}>\r\n            <td>{avvocato.nome}</td>\r\n            <td>{avvocato.cognome}</td>\r\n            <td>{avvocato.titolo}</td>\r\n            <td>{avvocato.indirizzo}</td>\r\n            <td>{avvocato.cap}</td>\r\n            <td>{avvocato.email}</td>\r\n            <td>{avvocato.pec}</td>\r\n            <td>{avvocato.telefono1}</td>\r\n            <td>{avvocato.telefono2}</td>\r\n            <td>{avvocato.fax}</td>\r\n            <td>{avvocato.note}</td>\r\n            <td><Button onClick={() => handleEdit(avvocato)}>Edit</Button></td>\r\n            <td><Button onClick={() => handleDelete(avvocato)}>Delete</Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Avvocati</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Avvocato eliminata con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Avvocato fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th>Titolo</th>\r\n                            <th>Indirizzo</th>\r\n                            <th>CAP</th>\r\n                            <th>Email</th>\r\n                            <th>PEC</th>\r\n                            <th>Telefono 1</th>\r\n                            <th>Telefono 2</th>\r\n                            <th>Fax</th>\r\n                            <th>Note</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {avvocatiArray.map(renderAvvocati)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Nome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nome Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il nome Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Cognome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Cognome Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={cognome}\r\n                                    onChange={e => setCognome(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Cognome Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Titolo </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Titolo Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={titolo}\r\n                                    onChange={e => setTitolo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Titolo Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextAddress\">\r\n                                <Form.Label> Indirizzo </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Indirizzo Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={indirizzo}\r\n                                    onChange={e => setIndirizzo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci l'indirizzo es. \"Via Dante Alighieri, 3, Firenze\"\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextCap\">\r\n                                <Form.Label> CAP </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"number\"\r\n                                    placeholder=\"CAP Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={cap}\r\n                                    onChange={e => setCap(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci CAP es. \"50122\"\r\n                                </Form.Text>\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Email </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    defaultValue=\"\"\r\n                                    value={email}\r\n                                    onChange={e => setEmail(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci Email Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Pec </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"PEC\"\r\n                                    defaultValue=\"\"\r\n                                    value={pec}\r\n                                    onChange={e => setPec(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci l'indirizzo di posta certificata dell'Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Telefono principale </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Telefono principale\"\r\n                                    defaultValue=\"\"\r\n                                    value={telefono1}\r\n                                    onChange={e => setTelefono1(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Telefono principale\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Telefono secondario </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Telefono secondario\"\r\n                                    defaultValue=\"\"\r\n                                    value={telefono2}\r\n                                    onChange={e => setTelefono2(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Telefono secondario\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Note </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Note\"\r\n                                    defaultValue=\"\"\r\n                                    value={note}\r\n                                    onChange={e => setNote(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci eventuali Note per l'Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                            <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                            <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avvocati;\r\n","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\index.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Appuntamenti.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Incidenti.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Dottori.js",["90","91"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport function Dottori(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [cognome, setCognome] = useState(\"\");\r\n    \r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, nome: name, cognome: cognome })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/dottore', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchDottori();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (dottore) => {\r\n        var r = window.confirm(`Confermi di eliminare il dottore: ${dottore.nome} , ${dottore.cognome} `);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ id: dottore.id, nome: dottore.name, cognome: dottore.cognome })\r\n            };\r\n            fetch('http://localhost:8080/delete/dottore/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchDottori();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (dottore) => {\r\n        console.log(\"EDIT\", dottore);\r\n        setId(dottore.id);\r\n        setName(dottore.nome);\r\n        setCognome(dottore.cognome);\r\n        setTipoins('Modifica Dottore');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n        setName(\"\");\r\n        setCognome(\"\");\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchDottori = () => {\r\n        axios.get(\"http://localhost:8080/fetch/dottori\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDottori();\r\n    }, []);\r\n\r\n    let dottoriArray = data;\r\n\r\n    const renderDottori = (dottore) => {\r\n        return (\r\n            <tr key={dottore.id}>\r\n            <td>{dottore.nome}</td>\r\n            <td>{dottore.cognome}</td>\r\n            <td><Button onClick={() => handleEdit(dottore)}>Edit</Button></td>\r\n            <td><Button onClick={() => handleDelete(dottore)}>Delete</Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Dottori</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Dottore eliminato con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Dottore fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {dottoriArray.map(renderDottori)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Nome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nome Dottore\"\r\n                                    defaultValue=\"\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il nome Dottore\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextAddress\">\r\n                                <Form.Label> Cognome </Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type=\"text\"\r\n                                    placeholder=\"Indirizzo Dottore\"\r\n                                    defaultValue=\"\"\r\n                                    value={cognome}\r\n                                    onChange={e => setCognome(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il cognome Dottore\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                                <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                                <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dottori;\r\n",{"ruleId":"92","severity":1,"message":"93","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"96","line":1,"column":26,"nodeType":"94","messageId":"95","endLine":1,"endColumn":35},{"ruleId":"92","severity":1,"message":"97","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},{"ruleId":"92","severity":1,"message":"98","line":9,"column":12,"nodeType":"94","messageId":"95","endLine":9,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":9,"column":20,"nodeType":"94","messageId":"95","endLine":9,"endColumn":29},{"ruleId":"92","severity":1,"message":"98","line":9,"column":12,"nodeType":"94","messageId":"95","endLine":9,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":9,"column":20,"nodeType":"94","messageId":"95","endLine":9,"endColumn":29},{"ruleId":"92","severity":1,"message":"98","line":7,"column":12,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":7,"column":20,"nodeType":"94","messageId":"95","endLine":7,"endColumn":29},{"ruleId":"92","severity":1,"message":"98","line":7,"column":12,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":7,"column":20,"nodeType":"94","messageId":"95","endLine":7,"endColumn":29},{"ruleId":"92","severity":1,"message":"98","line":7,"column":12,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":7,"column":20,"nodeType":"94","messageId":"95","endLine":7,"endColumn":29},{"ruleId":"92","severity":1,"message":"100","line":177,"column":9,"nodeType":"94","messageId":"95","endLine":177,"endColumn":25},{"ruleId":"92","severity":1,"message":"101","line":178,"column":9,"nodeType":"94","messageId":"95","endLine":178,"endColumn":22},{"ruleId":"92","severity":1,"message":"102","line":179,"column":9,"nodeType":"94","messageId":"95","endLine":179,"endColumn":22},{"ruleId":"92","severity":1,"message":"103","line":180,"column":9,"nodeType":"94","messageId":"95","endLine":180,"endColumn":21},{"ruleId":"92","severity":1,"message":"97","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},{"ruleId":"92","severity":1,"message":"98","line":9,"column":12,"nodeType":"94","messageId":"95","endLine":9,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":9,"column":20,"nodeType":"94","messageId":"95","endLine":9,"endColumn":29},{"ruleId":"92","severity":1,"message":"98","line":7,"column":12,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":7,"column":20,"nodeType":"94","messageId":"95","endLine":7,"endColumn":29},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Moment' is defined but never used.","'postId' is assigned a value but never used.","'setPostId' is assigned a value but never used.","'liquidatoriArray' is assigned a value but never used.","'soggettiArray' is assigned a value but never used.","'avvocatiArray' is assigned a value but never used.","'dottoriArray' is assigned a value but never used."]