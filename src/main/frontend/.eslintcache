[{"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\App.js":"1","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\reportWebVitals.js":"2","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\components\\SidebarData.js":"3","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\components\\Navbar.js":"4","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Assicurazioni.js":"5","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Home.js":"6","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Soggetti.js":"7","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Studi.js":"8","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Liquidatori.js":"9","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Incarichi.js":"10","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Avvocati.js":"11","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\index.js":"12","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Appuntamenti.js":"13","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Dottori.js":"14"},{"size":1146,"mtime":1617368572927,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1368,"mtime":1617368490178,"results":"18","hashOfConfig":"16"},{"size":1667,"mtime":1617292117096,"results":"19","hashOfConfig":"16"},{"size":14415,"mtime":1617289658881,"results":"20","hashOfConfig":"16"},{"size":20743,"mtime":1617373737880,"results":"21","hashOfConfig":"16"},{"size":23914,"mtime":1617357280630,"results":"22","hashOfConfig":"16"},{"size":8126,"mtime":1617289929632,"results":"23","hashOfConfig":"16"},{"size":9956,"mtime":1617370426615,"results":"24","hashOfConfig":"16"},{"size":25225,"mtime":1617374996243,"results":"25","hashOfConfig":"16"},{"size":15843,"mtime":1617289720967,"results":"26","hashOfConfig":"16"},{"size":503,"mtime":1616780844087,"results":"27","hashOfConfig":"16"},{"size":13341,"mtime":1617288272739,"results":"28","hashOfConfig":"16"},{"size":9819,"mtime":1617378540472,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fmjuyc",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\App.js",["62","63"],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\reportWebVitals.js",[],["64","65"],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\components\\SidebarData.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\components\\Navbar.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Assicurazioni.js",["66","67"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport 'moment-timezone';\r\n\r\nexport function Assicurazioni(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [telefono1, setTelefono1] = useState(\"\");\r\n    const [telefono2, setTelefono2] = useState(\"\");\r\n    const [indirizzo, setIndirizzo] = useState(\"\");\r\n    const [cap, setCap] = useState(\"\");\r\n    const [partitaiva, setPartitaiva] = useState(\"\");\r\n    const [codicefiscale, setCodicefiscale] = useState(\"\");\r\n    const [note, setNote] = useState(\"\");\r\n\r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, nome: name, email: email, telefono1: telefono1, telefono2: telefono2, indirizzo: indirizzo, cap: cap, partitaiva: partitaiva, codicefiscale: codicefiscale, note: note })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/assicurazione', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchAssicurazioni();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (assicurazione) => {\r\n        var r = window.confirm(`Confermi di eliminare l' assicurazione: ${assicurazione.nome} , ${assicurazione.indirizzo} , ${assicurazione.cap}`);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(assicurazione)\r\n            };\r\n            fetch('http://localhost:8080/delete/assicurazione/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchAssicurazioni();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (assicurazione) => {\r\n        console.log(\"EDIT\", assicurazione);\r\n        setId(assicurazione.id);\r\n        setName(assicurazione.nome);\r\n        setEmail(assicurazione.email);\r\n        setTelefono1(assicurazione.telefono1);\r\n        setTelefono2(assicurazione.telefono2);\r\n        setIndirizzo(assicurazione.indirizzo);\r\n        setCap(assicurazione.cap);\r\n        setPartitaiva(assicurazione.partitaiva);\r\n        setCodicefiscale(assicurazione.codicefiscale);\r\n        setNote(assicurazione.note);\r\n        setTipoins('Modifica Assicurazione');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n        setTelefono1(\"\");\r\n        setTelefono2(\"\");\r\n        setIndirizzo(\"\");\r\n        setCap(\"\");\r\n        setPartitaiva(\"\");\r\n        setCodicefiscale(\"\");\r\n        setNote(\"\");\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchAssicurazioni = () => {\r\n        axios.get(\"http://localhost:8080/fetch/assicurazioni\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAssicurazioni();\r\n    }, []);\r\n\r\n    let assicurazioniArray = data;\r\n\r\n    const renderAssicurazioni = (assicurazione) => {\r\n        return (\r\n            <tr key={assicurazione.id}>\r\n            <td>{assicurazione.nome}</td>\r\n            <td>{assicurazione.email}</td>\r\n            <td>{assicurazione.telefono1}</td>\r\n            <td>{assicurazione.telefono2}</td>\r\n            <td>{assicurazione.indirizzo}</td>\r\n            <td>{assicurazione.cap}</td>\r\n            <td>{assicurazione.partitaiva}</td>\r\n            <td>{assicurazione.codicefiscale}</td>\r\n            <td>{assicurazione.note}</td>\r\n            <td><Button onClick={() => handleEdit(assicurazione)}><FaIcons.FaEdit/></Button></td>\r\n            <td><Button onClick={() => handleDelete(assicurazione)}><FaIcons.FaTrash/></Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Assicurazioni</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Assicurazione eliminata con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Assicurazione fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nome</th>\r\n                            <th>Email</th>\r\n                            <th>Telefono 1</th>\r\n                            <th>Telefono 2</th>\r\n                            <th>Indirizzo</th>\r\n                            <th>CAP</th>\r\n                            <th>Partita Iva</th>\r\n                            <th>Codice Fiscale</th>\r\n                            <th>Note</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {assicurazioniArray.map(renderAssicurazioni)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Nome </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nome Assicurazione\"\r\n                                    defaultValue=\"\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il nome Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Email </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email Assicurazione\"\r\n                                    defaultValue=\"\"\r\n                                    value={email}\r\n                                    onChange={e => setEmail(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Email Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Telefono principale </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Telefono principale\"\r\n                                    defaultValue=\"\"\r\n                                    value={telefono1}\r\n                                    onChange={e => setTelefono1(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Telefono principale\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Telefono secondario </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Telefono secondario\"\r\n                                    defaultValue=\"\"\r\n                                    value={telefono2}\r\n                                    onChange={e => setTelefono2(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Telefono secondario\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextAddress\">\r\n                                <Form.Label> Indirizzo </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Indirizzo Assicurazione\"\r\n                                    defaultValue=\"\"\r\n                                    value={indirizzo}\r\n                                    onChange={e => setIndirizzo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci l'indirizzo es. \"Via Dante Alighieri, 3, Firenze\"\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextCap\">\r\n                                <Form.Label> CAP </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    placeholder=\"CAP Assicurazione\"\r\n                                    defaultValue=\"\"\r\n                                    value={cap}\r\n                                    onChange={e => setCap(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci CAP es. \"50122\"\r\n                                </Form.Text>\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Partita iva </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Partita iva\"\r\n                                    defaultValue=\"\"\r\n                                    value={partitaiva}\r\n                                    onChange={e => setPartitaiva(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci Partita iva Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Codice Fiscale </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Codice Fiscale\"\r\n                                    defaultValue=\"\"\r\n                                    value={codicefiscale}\r\n                                    onChange={e => setCodicefiscale(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Codice Fiscale Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Note </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Note\"\r\n                                    defaultValue=\"\"\r\n                                    value={note}\r\n                                    onChange={e => setNote(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci eventuali Note per l'Assicurazione\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                            <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                            <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Assicurazioni;\r\n","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Home.js",["68","69","70","71","72","73","74","75","76","77"],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Soggetti.js",["78","79","80"],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Studi.js",["81","82"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as FaIcons from \"react-icons/fa\";\r\n\r\nexport function Studi(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [indirizzo, setIndirizzo] = useState(\"\");\r\n    const [cap, setCap] = useState(\"\");\r\n    \r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, nome: name, indirizzo: indirizzo, cap: cap })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/studio', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchStudi();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (studio) => {\r\n        var r = window.confirm(`Confermi di eliminare lo studio: ${studio.nome} , ${studio.indirizzo} , ${studio.cap}`);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ id: studio.id, nome: studio.name, indirizzo: studio.indirizzo, cap: studio.cap })\r\n            };\r\n            fetch('http://localhost:8080/delete/studio/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchStudi();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (studio) => {\r\n        console.log(\"EDIT\", studio);\r\n        setId(studio.id);\r\n        setName(studio.nome);\r\n        setIndirizzo(studio.indirizzo);\r\n        setCap(studio.cap);\r\n        setTipoins('Modifica Studio');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n        setName(\"\");\r\n        setIndirizzo(\"\");\r\n        setCap(\"\");\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchStudi = () => {\r\n        axios.get(\"http://localhost:8080/fetch/studi\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchStudi();\r\n    }, []);\r\n\r\n    let studiArray = data;\r\n\r\n    const renderStudi = (studio) => {\r\n        return (\r\n            <tr key={studio.id}>\r\n            <td>{studio.nome}</td>\r\n            <td>{studio.indirizzo}</td>\r\n            <td>{studio.cap}</td>\r\n            <td><Button onClick={() => handleEdit(studio)}><FaIcons.FaEdit/></Button></td>\r\n            <td><Button onClick={() => handleDelete(studio)}><FaIcons.FaTrash/></Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Studi</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Studio eliminato con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Studio fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nome</th>\r\n                            <th>Indirizzo</th>\r\n                            <th>CAP</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {studiArray.map(renderStudi)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Nome </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nome Studio\"\r\n                                    defaultValue=\"\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il nome Studio\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextAddress\">\r\n                                <Form.Label> Indirizzo </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Indirizzo Studio\"\r\n                                    defaultValue=\"\"\r\n                                    value={indirizzo}\r\n                                    onChange={e => setIndirizzo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci l'indirizzo es. \"Via Dante Alighieri, 3, Firenze\"\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formPlaintextCap\">\r\n                                <Form.Label> CAP </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    placeholder=\"CAP Studio\"\r\n                                    defaultValue=\"\"\r\n                                    value={cap}\r\n                                    onChange={e => setCap(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci CAP es. \"50122\"\r\n                                </Form.Text>\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                            <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                            <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Studi;\r\n","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Liquidatori.js",["83","84"],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Incarichi.js",["85","86","87","88","89","90"],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Avvocati.js",["91","92","93"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Row, Form, Button, Table, Alert} from \"react-bootstrap\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport * as FaIcons from \"react-icons/fa\";\r\n\r\nexport function Avvocati(props) {\r\n    const [postId, setPostId] = useState(null);\r\n\r\n    const [id, setId] = useState(null);\r\n    const [name, setName] = useState(\"\");\r\n    const [cognome, setCognome] = useState(\"\");\r\n    const [titolo, setTitolo] = useState(\"\");\r\n    const [indirizzo, setIndirizzo] = useState(\"\");\r\n    const [cap, setCap] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pec, setPec] = useState(\"\");\r\n    const [telefono1, setTelefono1] = useState(\"\");\r\n    const [telefono2, setTelefono2] = useState(\"\");\r\n    const [fax, setFax] = useState(\"\");\r\n    const [note, setNote] = useState(\"\");\r\n\r\n    const [tipoins, setTipoins] = useState('Inserisci nuovo');\r\n    \r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ id: id, nome: name, cognome: cognome, titolo: titolo, indirizzo: indirizzo, cap: cap, email: email, pec: pec, telefono1: telefono1, telefono2: telefono2, fax: fax, note: note })\r\n    };\r\n\r\n    const [showSuccessAlert, isShowSuccessAlert]= useState(false);\r\n    const [showFailAlert, isShowFailAlert]= useState(false);\r\n\r\n    const [showSuccessDeleteAlert, isShowSuccessDeleteAlert]= useState(false);\r\n    const [showFailDeleteAlert, isShowFailDeleteAlert]= useState(false);\r\n\r\n    const handleSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        fetch('http://localhost:8080/insert/avvocato', requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => {             \r\n                isShowSuccessAlert(true);\r\n                clearForm();\r\n                fetchAvvocati();\r\n              })\r\n            .catch(err => {\r\n                console.log(err);\r\n                isShowFailAlert(true);\r\n            });\r\n    }\r\n    const handleDelete = (avvocato) => {\r\n        var r = window.confirm(`Confermi di eliminare l' avvocato: ${avvocato.nome} , ${avvocato.cognome}`);\r\n        if (r === true) {\r\n            const deleteOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(avvocato)\r\n            };\r\n            fetch('http://localhost:8080/delete/avvocato/', deleteOptions)\r\n                .then(response => {\r\n                    if(response.ok) {\r\n                        isShowSuccessDeleteAlert(true);\r\n                        clearForm();\r\n                        fetchAvvocati();\r\n                    } else {\r\n                        isShowFailDeleteAlert(true);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    isShowFailDeleteAlert(true);\r\n                });\r\n        }\r\n    }\r\n\r\n    const handleEdit = (avvocato) => {\r\n        console.log(\"EDIT\", avvocato);\r\n        setId(avvocato.id);\r\n        setName(avvocato.nome);\r\n        setCognome(avvocato.cognome);\r\n        setTitolo(avvocato.titolo);\r\n        setIndirizzo(avvocato.indirizzo);\r\n        setCap(avvocato.cap);\r\n        setEmail(avvocato.email);\r\n        setPec(avvocato.pec);\r\n        setTelefono1(avvocato.telefono1);\r\n        setTelefono2(avvocato.telefono2);\r\n        setFax(avvocato.fax);\r\n        setNote(avvocato.note);\r\n        setTipoins('Modifica Avvocato');\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setId(null);\r\n        setName(\"\");\r\n        setCognome(\"\");\r\n        setTitolo(\"\");\r\n        setIndirizzo(\"\");\r\n        setCap(\"\");\r\n        setEmail(\"\");\r\n        setPec(\"\");\r\n        setTelefono1(\"\");\r\n        setTelefono2(\"\");\r\n        setFax(\"\");\r\n        setNote(\"\");\r\n        setTipoins('Inserisci nuovo');\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const fetchAvvocati = () => {\r\n        axios.get(\"http://localhost:8080/fetch/avvocati\").then( res => {\r\n            console.log(res);\r\n            setData(res.data);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAvvocati();\r\n    }, []);\r\n\r\n    let avvocatiArray = data;\r\n\r\n    const renderAvvocati = (avvocato) => {\r\n        return (\r\n            <tr key={avvocato.id}>\r\n            <td>{avvocato.nome}</td>\r\n            <td>{avvocato.cognome}</td>\r\n            <td>{avvocato.titolo}</td>\r\n            <td>{avvocato.indirizzo}</td>\r\n            <td>{avvocato.cap}</td>\r\n            <td>{avvocato.email}</td>\r\n            <td>{avvocato.pec}</td>\r\n            <td>{avvocato.telefono1}</td>\r\n            <td>{avvocato.telefono2}</td>\r\n            <td>{avvocato.fax}</td>\r\n            <td>{avvocato.note}</td>\r\n            <td><Button onClick={() => handleEdit(avvocato)}><FaIcons.FaEdit/></Button></td>\r\n            <td><Button onClick={() => handleDelete(avvocato)}><FaIcons.FaTrash/></Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">Elenco Avvocati</h1>\r\n                { showSuccessDeleteAlert && <Alert idx=\"1\" variant=\"success\">Avvocato eliminata con successo</Alert>}\r\n                { showFailDeleteAlert && <Alert idx=\"2\" variant=\"danger\">Eliminazione Avvocato fallita</Alert> }\r\n                    <Table striped condensed hover>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Nome</th>\r\n                            <th>Cognome</th>\r\n                            <th>Titolo</th>\r\n                            <th>Indirizzo</th>\r\n                            <th>CAP</th>\r\n                            <th>Email</th>\r\n                            <th>PEC</th>\r\n                            <th>Telefono 1</th>\r\n                            <th>Telefono 2</th>\r\n                            <th>Fax</th>\r\n                            <th>Note</th>\r\n                            <th>Modifica</th>\r\n                            <th>Elimina</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {avvocatiArray.map(renderAvvocati)}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            \r\n            <div class=\"row\">\r\n                <div class=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\r\n                <h1 class=\"display-5 py-2 text-truncate\">{tipoins}</h1>\r\n                { showSuccessAlert && <Alert idx=\"3\" variant=\"success\">Aggiornato con successo</Alert>}\r\n                { showFailAlert && <Alert idx=\"4\" variant=\"danger\">Aggiornamento fallito</Alert> }\r\n\r\n                    <div class=\"px-2\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Nome </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Nome Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={name}\r\n                                    onChange={e => setName(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il nome Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Cognome </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Cognome Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={cognome}\r\n                                    onChange={e => setCognome(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Cognome Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Titolo </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Titolo Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={titolo}\r\n                                    onChange={e => setTitolo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Titolo Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextAddress\">\r\n                                <Form.Label> Indirizzo </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Indirizzo Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={indirizzo}\r\n                                    onChange={e => setIndirizzo(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci l'indirizzo es. \"Via Dante Alighieri, 3, Firenze\"\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextCap\">\r\n                                <Form.Label> CAP </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    placeholder=\"CAP Avvocato\"\r\n                                    defaultValue=\"\"\r\n                                    value={cap}\r\n                                    onChange={e => setCap(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci CAP es. \"50122\"\r\n                                </Form.Text>\r\n                                \r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Email </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    defaultValue=\"\"\r\n                                    value={email}\r\n                                    onChange={e => setEmail(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci Email Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Pec </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"PEC\"\r\n                                    defaultValue=\"\"\r\n                                    value={pec}\r\n                                    onChange={e => setPec(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci l'indirizzo di posta certificata dell'Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Telefono principale </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Telefono principale\"\r\n                                    defaultValue=\"\"\r\n                                    value={telefono1}\r\n                                    onChange={e => setTelefono1(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Telefono principale\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Telefono secondario </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Telefono secondario\"\r\n                                    defaultValue=\"\"\r\n                                    value={telefono2}\r\n                                    onChange={e => setTelefono2(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il Telefono secondario\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Fax </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Fax\"\r\n                                    defaultValue=\"\"\r\n                                    value={fax}\r\n                                    onChange={e => setFax(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci il fax\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextName\">\r\n                                <Form.Label> Note </Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Note\"\r\n                                    defaultValue=\"\"\r\n                                    value={note}\r\n                                    onChange={e => setNote(e.target.value)}\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                Inserisci eventuali Note per l'Avvocato\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                            <Form.Group as={Row} controlId=\"formPlaintextSubmit\">\r\n                            <Button variant=\"primary\" type=\"submit\">Salva</Button>\r\n                            <Button variant=\"secondary\" onClick={() => clearForm()}>Annulla</Button>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Avvocati;\r\n","C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\index.js",[],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Appuntamenti.js",["94","95","96","97","98","99","100"],"C:\\BVitSy\\studiomedico\\src\\main\\frontend\\src\\pages\\Dottori.js",["101","102","103","104","105"],{"ruleId":"106","severity":1,"message":"107","line":1,"column":16,"nodeType":"108","messageId":"109","endLine":1,"endColumn":24},{"ruleId":"106","severity":1,"message":"110","line":1,"column":26,"nodeType":"108","messageId":"109","endLine":1,"endColumn":35},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"106","severity":1,"message":"115","line":9,"column":12,"nodeType":"108","messageId":"109","endLine":9,"endColumn":18},{"ruleId":"106","severity":1,"message":"116","line":9,"column":20,"nodeType":"108","messageId":"109","endLine":9,"endColumn":29},{"ruleId":"106","severity":1,"message":"117","line":1,"column":38,"nodeType":"108","messageId":"109","endLine":1,"endColumn":47},{"ruleId":"106","severity":1,"message":"118","line":32,"column":12,"nodeType":"108","messageId":"109","endLine":32,"endColumn":19},{"ruleId":"106","severity":1,"message":"119","line":32,"column":21,"nodeType":"108","messageId":"109","endLine":32,"endColumn":31},{"ruleId":"106","severity":1,"message":"120","line":35,"column":11,"nodeType":"108","messageId":"109","endLine":35,"endColumn":28},{"ruleId":"121","severity":1,"message":"122","line":84,"column":8,"nodeType":"123","endLine":84,"endColumn":10,"suggestions":"124"},{"ruleId":"106","severity":1,"message":"125","line":97,"column":12,"nodeType":"108","messageId":"109","endLine":97,"endColumn":28},{"ruleId":"106","severity":1,"message":"126","line":98,"column":12,"nodeType":"108","messageId":"109","endLine":98,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":109,"column":53,"nodeType":"129","messageId":"130","endLine":109,"endColumn":55},{"ruleId":"127","severity":1,"message":"128","line":328,"column":33,"nodeType":"129","messageId":"130","endLine":328,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":341,"column":25,"nodeType":"133","endLine":341,"endColumn":46},{"ruleId":"106","severity":1,"message":"115","line":10,"column":12,"nodeType":"108","messageId":"109","endLine":10,"endColumn":18},{"ruleId":"106","severity":1,"message":"116","line":10,"column":20,"nodeType":"108","messageId":"109","endLine":10,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":160,"column":33,"nodeType":"129","messageId":"130","endLine":160,"endColumn":35},{"ruleId":"106","severity":1,"message":"115","line":8,"column":12,"nodeType":"108","messageId":"109","endLine":8,"endColumn":18},{"ruleId":"106","severity":1,"message":"116","line":8,"column":20,"nodeType":"108","messageId":"109","endLine":8,"endColumn":29},{"ruleId":"106","severity":1,"message":"115","line":9,"column":12,"nodeType":"108","messageId":"109","endLine":9,"endColumn":18},{"ruleId":"106","severity":1,"message":"116","line":9,"column":20,"nodeType":"108","messageId":"109","endLine":9,"endColumn":29},{"ruleId":"106","severity":1,"message":"117","line":1,"column":38,"nodeType":"108","messageId":"109","endLine":1,"endColumn":47},{"ruleId":"106","severity":1,"message":"134","line":10,"column":10,"nodeType":"108","messageId":"109","endLine":10,"endColumn":23},{"ruleId":"106","severity":1,"message":"115","line":13,"column":12,"nodeType":"108","messageId":"109","endLine":13,"endColumn":18},{"ruleId":"106","severity":1,"message":"116","line":13,"column":20,"nodeType":"108","messageId":"109","endLine":13,"endColumn":29},{"ruleId":"106","severity":1,"message":"135","line":29,"column":26,"nodeType":"108","messageId":"109","endLine":29,"endColumn":41},{"ruleId":"127","severity":1,"message":"128","line":376,"column":33,"nodeType":"129","messageId":"130","endLine":376,"endColumn":35},{"ruleId":"106","severity":1,"message":"136","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":14},{"ruleId":"106","severity":1,"message":"115","line":10,"column":12,"nodeType":"108","messageId":"109","endLine":10,"endColumn":18},{"ruleId":"106","severity":1,"message":"116","line":10,"column":20,"nodeType":"108","messageId":"109","endLine":10,"endColumn":29},{"ruleId":"106","severity":1,"message":"117","line":1,"column":38,"nodeType":"108","messageId":"109","endLine":1,"endColumn":47},{"ruleId":"106","severity":1,"message":"137","line":102,"column":12,"nodeType":"108","messageId":"109","endLine":102,"endColumn":19},{"ruleId":"106","severity":1,"message":"138","line":102,"column":21,"nodeType":"108","messageId":"109","endLine":102,"endColumn":31},{"ruleId":"106","severity":1,"message":"118","line":103,"column":12,"nodeType":"108","messageId":"109","endLine":103,"endColumn":19},{"ruleId":"106","severity":1,"message":"119","line":103,"column":21,"nodeType":"108","messageId":"109","endLine":103,"endColumn":31},{"ruleId":"106","severity":1,"message":"139","line":104,"column":12,"nodeType":"108","messageId":"109","endLine":104,"endColumn":19},{"ruleId":"106","severity":1,"message":"140","line":104,"column":21,"nodeType":"108","messageId":"109","endLine":104,"endColumn":31},{"ruleId":"106","severity":1,"message":"115","line":9,"column":12,"nodeType":"108","messageId":"109","endLine":9,"endColumn":18},{"ruleId":"106","severity":1,"message":"116","line":9,"column":20,"nodeType":"108","messageId":"109","endLine":9,"endColumn":29},{"ruleId":"106","severity":1,"message":"141","line":14,"column":12,"nodeType":"108","messageId":"109","endLine":14,"endColumn":20},{"ruleId":"106","severity":1,"message":"142","line":14,"column":22,"nodeType":"108","messageId":"109","endLine":14,"endColumn":33},{"ruleId":"106","severity":1,"message":"143","line":56,"column":11,"nodeType":"108","messageId":"109","endLine":56,"endColumn":31},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"'postId' is assigned a value but never used.","'setPostId' is assigned a value but never used.","'Component' is defined but never used.","'dataAvv' is assigned a value but never used.","'setDataAvv' is assigned a value but never used.","'fetchAppuntamenti' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.","ArrayExpression",["146"],"'showSuccessAlert' is assigned a value but never used.","'showFailAlert' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/style-prop-object","Style prop value must be an object","JSXAttribute","'FormattedDate' is defined but never used.","'setTipiIncarico' is assigned a value but never used.","'Moment' is defined but never used.","'dataSog' is assigned a value but never used.","'setDataSog' is assigned a value but never used.","'dataDot' is assigned a value but never used.","'setDataDot' is assigned a value but never used.","'idStudio' is assigned a value but never used.","'setIdStudio' is assigned a value but never used.","'associaDottoreStudio' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [value]",{"range":"149","text":"150"},[2899,2901],"[value]"]